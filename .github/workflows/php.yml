name: PHP5
on:
  push:
    branches:
      - "php5"
  pull_request:
    branches:
      - "php5"
permissions:
  contents: "read"
jobs:
  # PHP lint for different PHP versions
  build_and_test:
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        php-version:
          - "5.5"
          - "5.6"
    name: "PHP ${{ matrix.php-version }}"
    steps:
      - # git checkout
        name: "git checkout"
        uses: "actions/checkout@v3"
      - # Setup PHP
        name: "Setup PHP"
        uses: "shivammathur/setup-php@v2"
        with:
          php-version: "${{ matrix.php-version }}"
          coverage: "xdebug"
      - # Check PHP version
        name: "Check PHP version"
        run: "php -v"
      - # Lint PHP files
        name: "Lint PHP files"
        run: |
          for file in $(find src/ -type f -name '*.php'); do
            echo -n "==> ${file}: ";
            php -l "${file}";
          done
      - # Validate composer.json and composer.lock
        name: "Validate composer.json and composer.lock"
        run: "composer validate --strict"
      - # Cache Composer packages
        name: "Cache Composer packages"
        id: "composer-cache"
        uses: "actions/cache@v3"
        with:
          path: "vendor"
          key: "${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}"
          restore-keys: "${{ runner.os }}-php-"
      - # Install dependencies
        name: "Install composer dependencies"
        run: "composer install --prefer-dist --no-progress"
      - # PHP_CodeSniffer
        name: "PHP_CodeSniffer"
        run: "php vendor/bin/phpcs"
      - # Run phpunit
        name: "Run phpunit"
        run: "php vendor/bin/phpunit --coverage-clover clover.xml --coverage-text"
